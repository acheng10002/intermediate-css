/* Full height! */
body {
  min-height: 100vh; /* a single declaration on the body element contrains the app to the height of the viewport */
}                   /* change height to min-height and the footer stays in place at the bottom of the screen until 
                       it's pushed down by content */
/* apply vh units to the height, min-height, or max-height of various elements to create full-screen sections, 
   hero images, and more 
   OddBird redesign, hero images have max-height: 55vh so they never push headlines off the page 
    max-height: 85vh for a more image-dominated look
    min-height: 90vh to sections */

/*  Grid layout */
body {
  display: grid;
  grid-template-areas: 'header header'
                       'nav main'
                       'footer footer';
  grid-template-columns: minmax(auto, 12em) 5fr;
  grid-template-rows: auto 1fr auto;
}

h1 {
  grid-area: header;
}

footer {
  grid-area: footer;
}

nav {
  grid-area: nav;
}


article {
  grid-area: main;
}


/* Style */
* {
  box-sizing: border-box;
}

h1, footer {
  background: lightgray;
}

nav {
  border-right: 1px solid lightgray;
}

nav, article {
  overflow-y: auto; /* overflow values are being applied on internal elements, so that my content isn't cut off */
}

h1, nav, article, footer {
  padding: 1rem;
}

/* The height/width ratio for our video */
body {
  --ratio: 360 / 640;
}

/* Full-width video 
   if I can count on the video being full-screen, I can set the height relative to the full viewport width */

.full-width {
  width: 100vw; /* we know it will be full-width */
  height: calc(100vw * var(--ratio)); /* math doesn't have to happen in the browser with calc */
}

/* Constrained */
.max-width {
  --container-width: 30em;
  
  height: calc(100vw * var(--ratio));
  max-height: calc(var(--container-width) * var(--ratio));

  width: 100%;
  max-width: var(--container-width);  
}

iframe {
  display: block;
  margin: 0 auto 1em;
}

/* The height/width ratio for our video */
/* all my internal fonts and sizes are set using the same viewport units as the container */
/* so the content will scale with changes in both container height and width */
:root {
  --ratio: 9 / 16;
  --width: 98vmin; 
  --height: calc(var(--width) * var(--ratio));
}

* {
  box-sizing: border-box;
}

/* Slide Layout */
.slide {
  background: #fff;
  border: 1px solid;
  font-size: 3.5vmin;
  margin: 1vmin auto;
  padding: 3vmin;
  width: var(--width);
  height: var(--height);
  text-align: center;
}


/* Inside Styles */
h1 {
  font-size: 1.5em;
  font-weight: bold;
}

h1, p {
  margin-bottom: 3vmin;
}

img {
  display: block;
  margin: 3vmin auto;
  width: 15vmin;
}

.bigred {
  color: red;
  font-size: 3em;
}

/* Body */
body {
  background: #ccc;
}

/* how to break content outside of a restricted container so that it fills the viewport exactly
.full-width {
    margin-left: calc(50% - 50vw);
    margin-right: calc(50% - 50vw);
  }
*/